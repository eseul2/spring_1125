<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<!-- Mapper의 네임스페이스 설정. 해당 인터페이스와 정확히 연결하기 위해 사용-->
<mapper namespace="com.myaws1125.myapp.persistance.ReviewMapper">


<!-- 검색 필터링을 위한 SQL 구문 정의 -->
<sql id ="search">

 <!-- 검색 조건이 'subject'일 경우 -->
<if test="keyword != null"> <!-- 제목 검색어 포함 -->
	and bakery_name like concat('%',#{keyword},'%')
</if>

</sql>



  <!-- 게시글 목록 조회 쿼리 -->
<select id="reviewSelectAll" parameterType="HashMap" resultType="rv">
select * from bakery_review where delyn='N' <!-- 삭제되지 않은 게시글만 조회 -->
<include refid="search"/> <!-- 검색 필터링 조건 포함 -->
order by review_id desc limit #{startPageNum}, #{perPageNum} <!-- 페이징 처리 -->
</select>



   <!-- 게시글 총 개수를 조회하는 쿼리 -->
<select id ="reviewTotalCount" parameterType="scri" resultType="int">
select count(*) as cnt from bakery_review where delyn='N'
<include refid="search"/> <!-- 검색 필터링 조건 포함 -->
</select>



<!-- 새로운 게시물 추가하는 쿼리 -->
<insert id="reviewInsert" parameterType="rv">
insert into bakery_review(bakery_name, review_contents, midx, filename,address,bakery_phone,operating_hours,menu_info,parking_info,latitude,longitude,area)
values(#{bakery_name}, #{review_contents}, #{midx}, #{filename}, #{address}, #{bakery_phone}, #{operating_hours}, #{menu_info}, #{parking_info}, #{latitude}, #{longitude}, #{area})
</insert>



<!-- 내용 보여주는 쿼리 -->
<select id="reviewSelectOne" parameterType="int" resultType="rv">
select * from bakery_review where delyn='N' and review_id= #{review_id}
</select>

<!-- 게시물 삭제하는 쿼리 구문 -->
<update id="reviewDelete" parameterType="int">
update bakery_review set delyn='Y', modifyday=now() where review_id = #{review_id} 
</update>

<!-- 게시물 수정 쿼리 --> 
<update id="reviewUpdate" parameterType="rv">
update bakery_review set bakery_name =#{bakery_name}, review_contents =#{review_contents}, modifyday= now(),filename=#{filename}, address=#{address}, bakery_phone=#{bakery_phone}, operating_hours=#{operating_hours}, menu_info=#{menu_info}, parking_info=#{parking_info}, latitude=#{latitude}, longitude=#{longitude}, area=#{area}
where review_id=#{review_id}
</update>











</mapper>